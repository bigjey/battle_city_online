{"version":3,"sources":["constants.ts","preload.ts","gameplay/Body.ts","gameplay/Block.ts","utils.ts","gameplay/GameManager.ts","keyboard.ts","gameplay/Bullet.ts","gameplay/Tank.ts","level-editor.ts","main.ts","../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.c39d6dcf.js","sourceRoot":"..\\src\\client","sourcesContent":["export enum GLOBAL_MODE {\n  NORMAL_GAME,\n  DEBUG_TEST_LEVEL,\n  EDIT_TEST_LEVEL,\n}\n\nexport const MOVE_STEP = 2;\n\nexport const CANVAS_WIDTH = 416;\nexport const CANVAS_HEIGHT = 416;\n\nexport const BLOCK_SIZE = 8;\nexport const CLUSTER_SIZE = 2;\n\nexport const BULLET_SIZE = 8;\nexport const BULLET_SPEED = 4;\n\nexport const TANK_WIDTH = 32;\nexport const TANK_HEIGHT = 32;\n\nexport const SHOOT_COLDOWN = 200;\n\nexport enum DIR {\n  NONE = -1,\n  UP = 0,\n  RIGHT = 1,\n  DOWN = 2,\n  LEFT = 3,\n}\n\nexport enum BlockType {\n  Brick,\n  Steel,\n  Tree,\n  Water,\n}\n\nexport const KEYS = {\n  LEFT: \"ArrowLeft\",\n  RIGHT: \"ArrowRight\",\n  UP: \"ArrowUp\",\n  DOWN: \"ArrowDown\",\n  SHOOT: \"Space\",\n};\n","import PlayerImage from \"../assets/player_1.png\"; \nimport Brick_1Image from \"../assets/brick_1.png\";\nimport Brick_2Image from \"../assets/brick_2.png\";\nimport Brick_3Image from \"../assets/brick_3.png\";\nimport Brick_4Image from \"../assets/brick_4.png\";\nimport Stone_1Image from \"../assets/stone_1.png\";\nimport Stone_2Image from \"../assets/stone_2.png\";\nimport Stone_3Image from \"../assets/stone_3.png\";\nimport Stone_4Image from \"../assets/stone_4.png\";\nimport Tree_1Image from \"../assets/tree_1.png\";\nimport Tree_2Image from \"../assets/tree_2.png\";\nimport Tree_3Image from \"../assets/tree_3.png\";\nimport Tree_4Image from \"../assets/tree_4.png\";\n// import BaseImage from \"../assets/base.png\";\nimport Water_1Image from \"../assets/water_1.png\";\nimport Water_2Image from \"../assets/water_2.png\";\nimport Water_3Image from \"../assets/water_3.png\";\nimport Water_4Image from \"../assets/water_4.png\";\n\n\n\ninterface Sprites {\n  [key: string]: {\n    file: string;\n    img?: HTMLImageElement;\n  };\n}\n\nexport const SPRITES: Sprites = {\n  player_1: {\n    file: PlayerImage,\n  },\n  brick_1: {\n    file: Brick_1Image,\n  },\n  brick_2: {\n    file: Brick_2Image,\n  },\n  brick_3: {\n    file: Brick_3Image,\n  },\n  brick_4: {\n    file: Brick_4Image,\n  },\n  stone_1: {\n    file: Stone_1Image,\n  },\n  stone_2: {\n    file: Stone_2Image,\n  },\n  stone_3: {\n    file: Stone_3Image,\n  },\n  stone_4: {\n    file: Stone_4Image,\n  },\n  tree_1: {\n    file: Tree_1Image,\n  },\n  tree_2: {\n    file: Tree_2Image,\n  },\n  tree_3: {\n    file: Tree_3Image,\n  },\n  tree_4: {\n    file: Tree_4Image,\n  },\n  water_1: {\n    file: Water_1Image,\n  },\n  water_2: {\n    file: Water_2Image,\n  },\n  water_3: {\n    file: Water_3Image,\n  },\n  water_4: {\n    file: Water_4Image,\n  },\n};\n\nexport function preloadAssets(): Promise<void[]> {\n  const promises = Object.keys(SPRITES).map(\n    (key) =>\n      new Promise<void>((res) => {\n        const img = new Image();\n        img.onload = function () {\n          SPRITES[key].img = img;\n          res();\n        };\n        img.src = SPRITES[key].file;\n      })\n  );\n  return Promise.all(promises);\n}\n","import { XY } from \"..\";\n\nexport class Body {\n  pos: XY = {\n    x: 0,\n    y: 0,\n  };\n  size: XY = {\n    x: 0,\n    y: 0,\n  };\n  constructor(x = 0, y = 0, w = 0, h = 0) {\n    this.pos.x = x;\n    this.pos.y = y;\n    this.size.x = w;\n    this.size.y = h;\n  }\n  get t(): number {\n    return this.pos.y;\n  }\n  get l(): number {\n    return this.pos.x;\n  }\n  get b(): number {\n    return this.pos.y + this.size.y;\n  }\n  get r(): number {\n    return this.pos.x + this.size.x;\n  }\n  get center(): XY {\n    return {\n      x: this.pos.x + this.size.x / 2,\n      y: this.pos.y + this.size.y / 2,\n    };\n  }\n}\n","import { BlockType, BLOCK_SIZE } from \"../constants\";\nimport { renderBlock } from \"../utils\";\nimport { Body } from \"./Body\";\n\nexport class Block extends Body {\n  x: number;\n  y: number;\n  type: BlockType;\n  constructor(blockX: number, blockY: number, type: BlockType) {\n    super(blockX * BLOCK_SIZE, blockY * BLOCK_SIZE, BLOCK_SIZE, BLOCK_SIZE);\n\n    this.x = blockX;\n    this.y = blockY;\n    this.type = type;\n  }\n  render(): void {\n    renderBlock(this.type, this.x, this.y);\n  }\n  get isWalkable(): boolean {\n    switch (this.type) {\n      case BlockType.Tree:\n        return true;\n      default:\n        return false;\n    }\n  }\n  get isDamagable(): boolean {\n    switch (this.type) {\n      case BlockType.Brick:\n        return true;\n      default:\n        return false;\n    }\n  }\n  get isSolid(): boolean {\n    switch (this.type) {\n      case BlockType.Brick:\n      case BlockType.Steel:\n        return true;\n      default:\n        return false;\n    }\n  }\n}\n","import {\n  BlockType,\n  BLOCK_SIZE,\n  CANVAS_HEIGHT,\n  CANVAS_WIDTH,\n  CLUSTER_SIZE,\n} from \"./constants\";\nimport { Block } from \"./gameplay/Block\";\nimport { Body } from \"./gameplay/Body\";\nimport { gameManager } from \"./gameplay/GameManager\";\nimport { SPRITES } from \"./preload\";\n\nconst MOVEMENT_SNAP_VALUE = BLOCK_SIZE * 2;\n\nexport function AABBIntersects(A: Body, B: Body): boolean {\n  return !(A.l >= B.r || B.l >= A.r || A.t >= B.b || B.t >= A.b);\n}\n\nexport function snapValue(value: number): number {\n  const snapped = Math.round(value / MOVEMENT_SNAP_VALUE);\n  return snapped * MOVEMENT_SNAP_VALUE;\n}\n\nexport function blockIndexInBounds(x: number, y: number): boolean {\n  return x >= 0 && x < 52 && y >= 0 && y < 52;\n}\n\nexport function bodyInBounds(body: Body): boolean {\n  return (\n    body.l >= 0 &&\n    body.t >= 0 &&\n    body.b <= CANVAS_HEIGHT &&\n    body.r <= CANVAS_WIDTH\n  );\n}\n\nexport function bodyIsVisible(body: Body): boolean {\n  return (\n    body.l < CANVAS_WIDTH && body.r > 0 && body.t < CANVAS_HEIGHT && body.b > 0\n  );\n}\n\nexport function renderBlock(\n  type: BlockType,\n  blockX: number,\n  blockY: number\n): void {\n  const spriteIndex = (blockY % 2) * 2 + (blockX % 2);\n\n  switch (type) {\n    case BlockType.Brick:\n      gameManager.ctx.drawImage(\n        SPRITES[`brick_${spriteIndex + 1}`].img as CanvasImageSource,\n        blockX * BLOCK_SIZE,\n        blockY * BLOCK_SIZE\n      );\n      break;\n    case BlockType.Steel:\n      gameManager.ctx.drawImage(\n        SPRITES[`stone_${spriteIndex + 1}`].img as CanvasImageSource,\n        blockX * BLOCK_SIZE,\n        blockY * BLOCK_SIZE\n      );\n      break;\n    case BlockType.Tree:\n      gameManager.ctx.drawImage(\n        SPRITES[`tree_${spriteIndex + 1}`].img as CanvasImageSource,\n        blockX * BLOCK_SIZE,\n        blockY * BLOCK_SIZE\n      );\n      break;\n    case BlockType.Water:\n      gameManager.ctx.drawImage(\n        SPRITES[`water_${spriteIndex + 1}`].img as CanvasImageSource,\n        blockX * BLOCK_SIZE,\n        blockY * BLOCK_SIZE\n      );\n      break;\n    default:\n      gameManager.ctx.fillStyle = \"pink\";\n      gameManager.ctx.fillRect(\n        blockX * BLOCK_SIZE,\n        blockY * BLOCK_SIZE,\n        BLOCK_SIZE,\n        BLOCK_SIZE\n      );\n  }\n}\n\nexport function renderCluster(\n  type: BlockType,\n  clusterX: number,\n  clusterY: number\n): void {\n  const blockX = clusterX * CLUSTER_SIZE;\n  const blockY = clusterY * CLUSTER_SIZE;\n\n  for (let dy = 0; dy < CLUSTER_SIZE; dy++) {\n    for (let dx = 0; dx < CLUSTER_SIZE; dx++) {\n      renderBlock(type, blockX + dx, blockY + dy);\n    }\n  }\n}\n\nexport function buildCluster(\n  blockType: BlockType,\n  clusterX: number,\n  clusterY: number\n): void {\n  for (let yOffset = 0; yOffset < CLUSTER_SIZE; yOffset++) {\n    for (let xOffset = 0; xOffset < CLUSTER_SIZE; xOffset++) {\n      const blockX = clusterX * CLUSTER_SIZE + xOffset;\n      const blockY = clusterY * CLUSTER_SIZE + yOffset;\n\n      gameManager.blocks[blockY][blockX] = new Block(blockX, blockY, blockType);\n    }\n  }\n}\n\nexport function blocksinCluster(clusterX: number, clusterY: number): Block[] {\n  const items: Block[] = [];\n\n  for (let yOffset = 0; yOffset < CLUSTER_SIZE; yOffset++) {\n    for (let xOffset = 0; xOffset < CLUSTER_SIZE; xOffset++) {\n      const blockX = clusterX * CLUSTER_SIZE + xOffset;\n      const blockY = clusterY * CLUSTER_SIZE + yOffset;\n\n      const block = gameManager.blocks[blockY][blockX];\n\n      if (block) {\n        items.push(block);\n      }\n    }\n  }\n\n  return items;\n}\n","import {\n  BlockType,\n  CANVAS_HEIGHT,\n  CANVAS_WIDTH,\n  CLUSTER_SIZE,\n  GLOBAL_MODE,\n} from \"../constants\";\nimport { buildCluster } from \"../utils\";\nimport { Block } from \"./Block\";\nimport { Bullet } from \"./Bullet\";\nimport { Tank } from \"./Tank\";\n\nconst canvas = document.createElement(\"canvas\");\n\ndocument.body.appendChild(canvas);\n\ncanvas.width = CANVAS_WIDTH;\ncanvas.height = CANVAS_HEIGHT;\n\nexport interface GameManager {\n  mode: GLOBAL_MODE;\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  player1: Tank | null;\n  blocks: Array<Array<Block | null>>;\n  bullets: Bullet[];\n  debugLevel: Array<Array<BlockType | null>>;\n}\n\nexport class GameManager implements GameManager {\n  mode = GLOBAL_MODE.EDIT_TEST_LEVEL;\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  player1: Tank | null = null;\n  blocks: Array<Array<Block | null>> = [];\n  bullets: Bullet[] = [];\n  debugLevel: Array<Array<BlockType | null>> = [];\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n    this.restoreDebugLevelData();\n  }\n\n  setMode(mode: GLOBAL_MODE): void {\n    this.mode = mode;\n\n    switch (this.mode) {\n      case GLOBAL_MODE.DEBUG_TEST_LEVEL:\n        this.buildDebugLevel();\n        this.player1 = new Tank(0, 0);\n        break;\n    }\n  }\n\n  restoreDebugLevelData(): void {\n    const data = localStorage.getItem(\"debugLevel\");\n    if (data) {\n      try {\n        this.debugLevel = JSON.parse(data);\n      } catch (e) {\n        //\n      }\n    }\n\n    if (!this.debugLevel.length) {\n      this.debugLevel = new Array(52 / CLUSTER_SIZE)\n        .fill(null)\n        .map(() => new Array(52 / CLUSTER_SIZE).fill(null));\n    }\n  }\n  buildDebugLevel(): void {\n    for (const [clusterY, row] of this.debugLevel.entries()) {\n      for (const [clusterX, type] of row.entries()) {\n        if (type !== null) {\n          buildCluster(type, clusterX, clusterY);\n        }\n      }\n    }\n  }\n}\n\nconst instance = new GameManager(canvas);\n\nwindow.gameManager = instance;\n\nexport { instance as gameManager };\n","import { GLOBAL_MODE } from \"./constants\";\nimport { gameManager } from \"./gameplay/GameManager\";\n\nexport const keysPressed: { [key: string]: boolean } = {};\n\nwindow.addEventListener(\"keypress\", function (e) {\n  switch (e.key) {\n    case \"1\":\n      gameManager.setMode(GLOBAL_MODE.NORMAL_GAME);\n      break;\n    case \"2\":\n      gameManager.setMode(GLOBAL_MODE.DEBUG_TEST_LEVEL);\n      break;\n    case \"3\":\n      gameManager.setMode(GLOBAL_MODE.EDIT_TEST_LEVEL);\n      break;\n\n    default:\n      break;\n  }\n});\n\nwindow.addEventListener(\"keydown\", function (e) {\n  keysPressed[e.code] = true;\n});\n\nwindow.addEventListener(\"keyup\", function (e) {\n  keysPressed[e.code] = false;\n});\n","import { DIR, BULLET_SIZE, BULLET_SPEED, BLOCK_SIZE } from \"../constants\";\nimport { overlappingBlocks, bodyIsVisible, blockIndexInBounds } from \"../utils\";\n\nimport { Body } from \"./Body\";\nimport { Block } from \"./Block\";\nimport { gameManager } from \"./GameManager\";\nimport { XY } from \"..\";\n\nexport class Bullet extends Body {\n  dir: DIR = DIR.NONE;\n\n  constructor(x: number, y: number, dir: DIR) {\n    super(x, y, BULLET_SIZE, BULLET_SIZE);\n\n    this.dir = dir;\n  }\n\n  update(): void {\n    switch (this.dir) {\n      case DIR.LEFT:\n        this.pos.x -= BULLET_SPEED;\n        break;\n      case DIR.UP:\n        this.pos.y -= BULLET_SPEED;\n        break;\n      case DIR.RIGHT:\n        this.pos.x += BULLET_SPEED;\n        break;\n      case DIR.DOWN:\n        this.pos.y += BULLET_SPEED;\n        break;\n    }\n\n    const b = this.hitBlocks();\n\n    if (b.length) {\n      let hit = false;\n\n      for (const block of b) {\n        if (block.isSolid) {\n          hit = true;\n        }\n        if (block.isDamagable) {\n          gameManager.blocks[block.y][block.x] = null;\n          hit = true;\n        }\n      }\n\n      if (hit) {\n        gameManager.bullets.splice(gameManager.bullets.indexOf(this), 1);\n      }\n    }\n\n    if (!bodyIsVisible(this)) {\n      gameManager.bullets.splice(gameManager.bullets.indexOf(this), 1);\n    }\n  }\n  render(): void {\n    gameManager.ctx.fillStyle = \"#fff\";\n    gameManager.ctx.fillRect(this.pos.x, this.pos.y, BULLET_SIZE, BULLET_SIZE);\n  }\n  hitBlocks(): Array<Block> {\n    const items: Array<Block> = [];\n\n    if (this.dir === DIR.NONE) {\n      return items;\n    }\n\n    let pos1, pos2, pos3, pos4: XY;\n\n    if (this.dir === DIR.LEFT || this.dir === DIR.RIGHT) {\n      pos1 = {\n        x: Math.floor(this.center.x / BLOCK_SIZE),\n        y: Math.floor((this.center.y + BLOCK_SIZE * 0.5) / BLOCK_SIZE),\n      };\n      pos2 = {\n        x: Math.floor(this.center.x / BLOCK_SIZE),\n        y: Math.floor((this.center.y - BLOCK_SIZE * 0.5) / BLOCK_SIZE),\n      };\n      pos3 = {\n        x: Math.floor(this.center.x / BLOCK_SIZE),\n        y: Math.floor((this.center.y + BLOCK_SIZE * 1.5) / BLOCK_SIZE),\n      };\n      pos4 = {\n        x: Math.floor(this.center.x / BLOCK_SIZE),\n        y: Math.floor((this.center.y - BLOCK_SIZE * 1.5) / BLOCK_SIZE),\n      };\n    } else {\n      pos1 = {\n        x: Math.floor((this.center.x + BLOCK_SIZE * 0.5) / BLOCK_SIZE),\n        y: Math.floor(this.center.y / BLOCK_SIZE),\n      };\n      pos2 = {\n        x: Math.floor((this.center.x - BLOCK_SIZE * 0.5) / BLOCK_SIZE),\n        y: Math.floor(this.center.y / BLOCK_SIZE),\n      };\n      pos3 = {\n        x: Math.floor((this.center.x + BLOCK_SIZE * 1.5) / BLOCK_SIZE),\n        y: Math.floor(this.center.y / BLOCK_SIZE),\n      };\n      pos4 = {\n        x: Math.floor((this.center.x - BLOCK_SIZE * 1.5) / BLOCK_SIZE),\n        y: Math.floor(this.center.y / BLOCK_SIZE),\n      };\n    }\n\n    // first side of hit\n    if (\n      blockIndexInBounds(pos1.x, pos1.y) &&\n      gameManager.blocks[pos1.y][pos1.x]\n    ) {\n      items.push(gameManager.blocks[pos1.y][pos1.x] as Block);\n      // second block of first side\n      if (\n        blockIndexInBounds(pos3.x, pos3.y) &&\n        gameManager.blocks[pos3.y][pos3.x]\n      ) {\n        items.push(gameManager.blocks[pos3.y][pos3.x] as Block);\n      }\n    }\n\n    // second side of hit\n    if (\n      blockIndexInBounds(pos2.x, pos2.y) &&\n      gameManager.blocks[pos2.y][pos2.x]\n    ) {\n      items.push(gameManager.blocks[pos2.y][pos2.x] as Block);\n      // second block of second side\n      if (\n        blockIndexInBounds(pos4.x, pos4.y) &&\n        gameManager.blocks[pos4.y][pos4.x]\n      ) {\n        items.push(gameManager.blocks[pos4.y][pos4.x] as Block);\n      }\n    }\n\n    // for (let x = lPos; x < lPos + radius; x++) {\n    //   for (let y = tPos; y < tPos + radius; y++) {\n    //     if (!blockIndexInBounds(x, y)) {\n    //       continue;\n    //     }\n    //     if (gameManager.blocks[y][x]) {\n    //       items.push(gameManager.blocks[y][x] as Block);\n    //     }\n    //   }\n    // }\n\n    return items;\n  }\n}\n","import { XY } from \"..\";\nimport {\n  BLOCK_SIZE,\n  BULLET_SIZE,\n  CLUSTER_SIZE,\n  DIR,\n  KEYS,\n  MOVE_STEP,\n  SHOOT_COLDOWN,\n  TANK_HEIGHT,\n  TANK_WIDTH,\n} from \"../constants\";\nimport { keysPressed } from \"../keyboard\";\nimport { SPRITES } from \"../preload\";\nimport {\n  snapValue,\n  bodyInBounds,\n  AABBIntersects,\n  blocksinCluster,\n} from \"../utils\";\nimport { Block } from \"./Block\";\nimport { Body } from \"./Body\";\nimport { Bullet } from \"./Bullet\";\nimport { gameManager } from \"./GameManager\";\n\nexport class Tank extends Body {\n  dir = DIR.RIGHT;\n  lastShot = 0;\n\n  constructor(x: number, y: number) {\n    super(x, y, TANK_WIDTH, TANK_HEIGHT);\n  }\n\n  update(): void {\n    // movement\n    const newPos: XY = {\n      x: this.pos.x,\n      y: this.pos.y,\n    };\n    let newDir: DIR = DIR.NONE;\n    if (keysPressed[KEYS.LEFT]) {\n      newPos.x -= MOVE_STEP;\n      this.pos.y = newPos.y = snapValue(this.pos.y);\n      newDir = DIR.LEFT;\n    } else if (keysPressed[KEYS.RIGHT]) {\n      newPos.x += MOVE_STEP;\n      this.pos.y = newPos.y = snapValue(this.pos.y);\n      newDir = DIR.RIGHT;\n    } else if (keysPressed[KEYS.UP]) {\n      newPos.y -= MOVE_STEP;\n      this.pos.x = newPos.x = snapValue(this.pos.x);\n      newDir = DIR.UP;\n    } else if (keysPressed[KEYS.DOWN]) {\n      newPos.y += MOVE_STEP;\n      this.pos.x = newPos.x = snapValue(this.pos.x);\n      newDir = DIR.DOWN;\n    }\n    if (newDir !== DIR.NONE) {\n      this.dir = newDir;\n\n      if (this.move(newPos)) {\n        this.pos = newPos;\n      }\n    }\n\n    // shooting\n    if (\n      (!this.lastShot || Date.now() - this.lastShot >= SHOOT_COLDOWN) &&\n      keysPressed[KEYS.SHOOT]\n    ) {\n      this.shoot();\n    }\n  }\n\n  render(): void {\n    const x = this.pos.x + this.size.x / 2;\n    const y = this.pos.y + this.size.y / 2;\n    gameManager.ctx.save();\n    gameManager.ctx.translate(x, y);\n    gameManager.ctx.rotate((Math.PI / 2) * this.dir);\n    gameManager.ctx.translate(-x, -y);\n    gameManager.ctx.drawImage(\n      SPRITES.player_1.img as CanvasImageSource,\n      this.pos.x,\n      this.pos.y\n    );\n    gameManager.ctx.restore();\n  }\n  move(newPos: XY): boolean {\n    const newBody = new Body(newPos.x, newPos.y, TANK_WIDTH, TANK_WIDTH);\n    if (!bodyInBounds(newBody)) {\n      return false;\n    }\n\n    const blocks = this.overlappingBlocks(newBody);\n\n    for (const block of blocks) {\n      if (!block.isWalkable) {\n        console.log(\"cant walk\");\n        return false;\n      }\n    }\n\n    return true;\n  }\n  shoot(): void {\n    gameManager.bullets.push(\n      new Bullet(\n        this.center.x - BULLET_SIZE / 2,\n        this.center.y - BULLET_SIZE / 2,\n        this.dir\n      )\n    );\n    this.lastShot = Date.now();\n  }\n  overlappingBlocks(body: Body): Block[] {\n    const items: Block[] = [];\n    const res = BLOCK_SIZE * CLUSTER_SIZE;\n\n    const lCluster = Math.floor(body.l / res);\n    const rCluster = Math.ceil(body.r / res);\n    const tCluster = Math.floor(body.t / res);\n    const bCluster = Math.ceil(body.b / res);\n\n    for (let clusterY = tCluster; clusterY < bCluster; clusterY++) {\n      for (let clusterX = lCluster; clusterX < rCluster; clusterX++) {\n        for (const block of blocksinCluster(clusterX, clusterY)) {\n          items.push(block);\n        }\n      }\n    }\n\n    console.log(lCluster, rCluster);\n    console.log(tCluster, bCluster);\n\n    return items;\n  }\n}\n","import { XY } from \".\";\nimport {\n  BlockType,\n  BLOCK_SIZE,\n  CANVAS_HEIGHT,\n  CANVAS_WIDTH,\n  CLUSTER_SIZE,\n} from \"./constants\";\nimport { gameManager } from \"./gameplay/GameManager\";\nimport { renderCluster } from \"./utils\";\n\nconst $level_editor = document.querySelectorAll(\"#level-editor\");\nconst $pallete_colors: NodeListOf<HTMLDivElement> = document.querySelectorAll(\n  \".pallete__color\"\n);\nconst classnames: { [key: string]: string } = {\n  activePaletteColor: \"pallete__color--active\",\n};\n\nconst stringToBrush: { [name: string]: BlockType | null } = {\n  empty: null,\n  brick: BlockType.Brick,\n  stone: BlockType.Steel,\n  tree: BlockType.Tree,\n  water: BlockType.Water,\n};\n\nconst RESOLUTION = BLOCK_SIZE * CLUSTER_SIZE;\n\nexport class LevelEditor {\n  brush: BlockType | null = null;\n  hl: XY | null = null;\n  mousePressed = false;\n\n  constructor() {\n    $pallete_colors.forEach(($color) => {\n      $color.addEventListener(\"click\", (e) => {\n        const brushValue = $color.dataset.colorValue;\n        if (brushValue) {\n          const brushType = stringToBrush[brushValue];\n          this.setBrush(brushType);\n\n          $pallete_colors.forEach(($color) => {\n            $color.classList.remove(classnames.activePaletteColor);\n          });\n\n          $color.classList.add(classnames.activePaletteColor);\n        }\n      });\n    });\n\n    gameManager.canvas.addEventListener(\"mousemove\", (e) => {\n      const x = Math.floor(e.offsetX / RESOLUTION);\n      const y = Math.floor(e.offsetY / RESOLUTION);\n\n      if (x >= 0 && x < 52 / CLUSTER_SIZE && y >= 0 && y < 52 / CLUSTER_SIZE) {\n        this.setHL({ x, y });\n        if (this.mousePressed) {\n          this.paintCell({ x, y });\n        }\n      } else {\n        this.setHL(null);\n      }\n    });\n\n    gameManager.canvas.addEventListener(\"mouseleave\", () => {\n      this.setHL(null);\n    });\n\n    gameManager.canvas.addEventListener(\"mousedown\", (e) => {\n      this.mousePressed = true;\n\n      const x = Math.floor(e.offsetX / RESOLUTION);\n      const y = Math.floor(e.offsetY / RESOLUTION);\n\n      if (x >= 0 && x < 52 / CLUSTER_SIZE && y >= 0 && y < 52 / CLUSTER_SIZE) {\n        this.paintCell({ x, y });\n      }\n    });\n    gameManager.canvas.addEventListener(\"mouseup\", () => {\n      this.mousePressed = false;\n    });\n  }\n  render(): void {\n    gameManager.ctx.fillStyle = \"#000\";\n    gameManager.ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n    const res = BLOCK_SIZE * CLUSTER_SIZE;\n\n    for (let i = 0; i < Math.floor(CANVAS_WIDTH / res); i++) {\n      gameManager.ctx.strokeStyle = \"#222\";\n      gameManager.ctx.lineWidth = 1;\n      gameManager.ctx.beginPath();\n      gameManager.ctx.moveTo(i * res, 0);\n      gameManager.ctx.lineTo(i * res, CANVAS_HEIGHT);\n      gameManager.ctx.closePath();\n      gameManager.ctx.stroke();\n      gameManager.ctx.beginPath();\n      gameManager.ctx.moveTo(0, i * res);\n      gameManager.ctx.lineTo(CANVAS_WIDTH, i * res);\n      gameManager.ctx.closePath();\n      gameManager.ctx.stroke();\n    }\n\n    for (const [clusterY, row] of gameManager.debugLevel.entries()) {\n      for (const [clusterX, type] of row.entries()) {\n        if (type !== null) {\n          renderCluster(type, clusterX, clusterY);\n        }\n      }\n    }\n\n    if (this.hl) {\n      gameManager.ctx.strokeStyle = \"rgba(255,255,255,1)\";\n      gameManager.ctx.lineWidth = 2;\n      gameManager.ctx.strokeRect(\n        this.hl.x * RESOLUTION,\n        this.hl.y * RESOLUTION,\n        RESOLUTION,\n        RESOLUTION\n      );\n    }\n  }\n  setBrush(brush: BlockType | null): void {\n    this.brush = brush;\n  }\n  setHL(hl: XY | null): void {\n    this.hl = hl;\n  }\n  paintCell(xy: XY): void {\n    gameManager.debugLevel[xy.y][xy.x] = this.brush;\n\n    this.save();\n  }\n  save(): void {\n    localStorage.setItem(\"debugLevel\", JSON.stringify(gameManager.debugLevel));\n  }\n}\n\nconst instance = new LevelEditor();\n\nwindow.levelEditor = instance;\n\nexport { instance as levelEditor };\n","import { CANVAS_HEIGHT, CANVAS_WIDTH, GLOBAL_MODE } from \"./constants\";\nimport { preloadAssets } from \"./preload\";\nimport { Tank } from \"./gameplay/Tank\";\n\nimport { gameManager } from \"./gameplay/GameManager\";\nimport { levelEditor } from \"./level-editor\";\n\nfunction update() {\n  gameManager.player1?.update();\n\n  for (const bullet of gameManager.bullets) {\n    bullet.update();\n  }\n}\n\nfunction render() {\n  gameManager.ctx.fillStyle = \"#000\";\n  gameManager.ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n  gameManager.player1?.render();\n\n  for (const bullet of gameManager.bullets) {\n    bullet.render();\n  }\n\n  for (const row of gameManager.blocks) {\n    for (const block of row) {\n      if (block) {\n        block.render();\n      }\n    }\n  }\n}\n\nfunction tick() {\n  switch (gameManager.mode) {\n    case GLOBAL_MODE.NORMAL_GAME: {\n      gameManager.ctx.fillStyle = \"pink\";\n      gameManager.ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      break;\n    }\n    case GLOBAL_MODE.DEBUG_TEST_LEVEL: {\n      update();\n      render();\n      break;\n    }\n    case GLOBAL_MODE.EDIT_TEST_LEVEL: {\n      levelEditor.render();\n      break;\n    }\n    default:\n  }\n\n  window.setTimeout(tick, 1000 / 60);\n}\n\n{\n  gameManager.player1 = new Tank(0, 0);\n  gameManager.blocks = new Array(52)\n    .fill(null)\n    .map(() => new Array(52).fill(null));\n  gameManager.bullets = [];\n}\n\npreloadAssets().then(tick);\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}